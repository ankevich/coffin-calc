import React, { useState, useEffect } from 'react'
import data from './data/data.json'
import expectationsData from './data/life-expectancy-stats.json'
// TODO:
// –ù–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ —Å—Ä–µ–¥–Ω–µ–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏ –≤ —Å—Ç—Ä–∞–Ω–∞—Ö, –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ json
// –°–≤–µ—Ä—Å—Ç–∞—Ç—å –º–æ–∫–∞–ø:
// - —Ä–∞—Å–ø–æ–ª–æ–∂–∏—Ç—å –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ—á–∫–µ
// + –ø–æ–ª—É—á–∏—Ç—å –≥–æ–¥–∞ –∏–∑ json
// + –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω—ã –∏–∑ json
// + —Å–¥–µ–ª–∞—Ç—å –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å –≥–æ–¥–∞–º–∏
// + —Å–¥–µ–ª–∞—Ç—å –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–æ —Å—Ç—Ä–∞–Ω–∞–º–∏
// - –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏
// - –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≥–æ–¥ –∏ —Å—Ç—Ä–∞–Ω—É, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏
// - –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –∂–∏—Ç—å –æ—Å—Ç–∞–ª–æ—Å—å


// –°–¥–µ–ª–∞—Ç—å –º–æ–∫–∞–ø –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º
// - –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å input –≤ —Å–µ—Ä–µ–¥–∏–Ω—É —Å—Ç—Ä–æ–∫–∏
// - —Å–¥–µ–ª–∞—Ç—å –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à–∏
// - —Å–¥–µ–ª–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å –≥–æ–¥–∞–º–∏, —Å–æ—Å–ª–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–æ
// + –≤—ã—á–∏—Å–ª–∏—Ç—å –∫–∞–∫–æ–π —Å–µ–π—á–∞—Å –≥–æ–¥
// + –≤—ã—Ç–∞—â–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥ –∏–∑ select
// + –ø–æ—Å—á–∏—Ç–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≥–æ–¥–∞
// + –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –æ—Å—Ç–∞–ª–æ—Å—å –∏ –≤–µ–≤–µ—Å—Ç–∏ —ç—Ç–æ –≤ —Å—Ç—Ä–æ–∫—É

// –ü–æ–¥—Å–æ–µ–¥–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫ –∫–æ–¥—É
// –í—ã–≤–µ—Å—Ç–∏ "–¢—ã —É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º—ë—Ä—Ç–≤" –µ—Å–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç > —Å—Ä–µ–¥–Ω–µ–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏

// –û—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–∞ github
// –î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç (—Å–¥–µ–ª–∞—Ç—å —Å–∞–π—Ç)
// + –î–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö https://datasets.iisg.amsterdam/dataset.xhtml?persistentId=hdl:10622/LKYT53

const getLifeExpectancy = (countryName, year) => {
    // –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã –≥–¥–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω–∞—à–∏–º
    const matchingCountries = expectationsData.filter((x) =>x.name === countryName)
    
    // –í—ã—Ç–∞—â–∏—Ç—å –æ–±—å–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö —Å—Ç—Ä–∞–Ω
   const countryData = matchingCountries[0]
    
    // –í—ã—Ç–∞—â–∏—Ç—å –∏–∑ —Å—Ç—Ä–∞–Ω—ã –æ–∂–∏–¥–∞–µ–º—É—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏—Å—Ö–æ–¥—è –∏–∑ –≥–æ–¥–∞
    const lifeExpectancy = countryData[year]
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π (Float)
    const result = parseFloat(lifeExpectancy)
    
    // –í–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return result
}

function App() {
    const [name, setName] = useState('')
    const [year, setYear] = useState('2000')
    const [country, setCountry] = useState('Russia')
    const [hideAnswer, setAnswerHidden] = useState(true)
    
    const currentDate = new Date()
    const currentYear = currentDate.getFullYear()
    
    const age = currentYear - year
    const lifeExpectancy = getLifeExpectancy(country, year)
    const remainingAge = lifeExpectancy - age

    return (
        <div>
            <h1>–ì—Ä–æ–±-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ‚ö∞Ô∏èüßÆ</h1>
            <h3>–ò–º—è</h3>
            <input onChange={(event) => setName(event.target.value)}></input>
            <h3>–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è</h3>
            <select onChange={(event) => setYear(event.target.value)}>
                <option disabled selected>
                    –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥
                </option>
                {data.years.map((year) => (
                    <option>{year}</option>
                ))}
            </select>
            <h3>–°—Ç—Ä–∞–Ω–∞</h3>
            <select onChange={(event) => setCountry(event.target.value)}>
                <option disabled selected>
                    –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É
                </option>
                {data.countries.map((country) => (
                    <option>{country}</option>
                ))}
            </select>
            <p>
                <button onClick={() => setAnswerHidden(false)}>–ü–æ—Å—á–∏—Ç–∞—Ç—å</button>
            </p>
            <p hidden={hideAnswer}>
                –ü—Ä–∏–≤–µ—Ç, {name}, {remainingAge > 0 ? `—Ç–µ–±–µ –æ—Å—Ç–∞–ª–æ—Å—å –∂–∏—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ ${remainingAge} –ª–µ—Ç.`
                                                : `—Ç—ã –≤–æ–æ–±—â–µ –¥–æ–ª–∂–µ–Ω —É–∂–µ –ª–µ–∂–∞—Ç—å –≤ ‚ö∞Ô∏è, —É–∑–±–∞–≥–æ–π—Å—è!`}
                <br/>
                {remainingAge > 0 ? `–¢—ã –¥–æ–ª–∂–µ–Ω –¥–æ—Ç—è–Ω—É—Ç—å –¥–æ ${lifeExpectancy}.`
                                  : `–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã–ª —É–º–µ—Ä–µ—Ç—å –≤ ${lifeExpectancy} –ª–µ—Ç.`}
            </p>
        </div>
    )
}

export default App
